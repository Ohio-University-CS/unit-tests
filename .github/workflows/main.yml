name: Python tests

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            **/requirements.txt
            **/pyproject.toml
            **/setup.cfg
            **/poetry.lock

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            # If you use Poetry or PDM, replace this block accordingly
            pip install pytest pytest-cov
          else
            pip install pytest pytest-cov
          fi

      - name: Run pytest (with coverage + JUnit XML)
        run: |
          mkdir -p reports
          pytest -v \
            --maxfail=1 \
            --cov=. --cov-report=term-missing \
            --junitxml=reports/junit-${{ matrix.python-version }}.xml

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.python-version }}
          path: |
            reports/*.xml
            ./.coverage*
          if-no-files-found: ignore
